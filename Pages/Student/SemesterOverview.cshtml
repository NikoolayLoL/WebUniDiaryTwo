@page
@model WebUniDiaryTwo.Pages.Student.SemesterOverviewModel
@{
    ViewData["Title"] = "Semester Overview";
}

@Html.Partial("Student/_ToolBar")

<div class="container mt-4">
    <div class="text-center">
        <h3 class="display-4">@Model.SUser.Semester.Name</h3>
        <h4 class="text-muted">@Model.SUser.User.FirstName @Model.SUser.User.LastName</h4>
    </div>

    <div class="mt-5">
        <h4>Subjects and Grades</h4>
        <table class="table table-striped table-hover mt-3">
            <thead class="table-dark">
                <tr>
                    <th>Subject Name</th>
                    <th>Grades</th>
                    <th>Average</th>
                    <th>Final</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var subject in Model.SSubject.OrderBy(x => x.SemesterLenghtId))
                {
                    <tr>
                        <td>
                            <span class="badge bg-info me-3">@subject.SemesterLenghtId</span>
                            @subject.Subject.Name
                        </td>
                        @{decimal finalGrade = 0;}
                        <td>
                            <div class="d-flex flex-wrap">
                                @{
                                    
                                    if (subject.Subject.Grades.Where(g => g.SemesterUserId == Model.SUser.Id).Any())
                                    {
                                        foreach (var grade in subject.Subject.Grades.Where(g => g.SemesterUserId == Model.SUser.Id))
                                        {
                                            if (@grade.Type == "Final")
                                            {
                                                finalGrade = grade.GradeValue;
                                            }
                                            else
                                            {
                                                var badgeClass = grade.GradeValue switch
                                                {
                                                    6 => "bg-success text-white",
                                                    5 => "bg-primary text-white",
                                                    4 => "bg-info text-dark",
                                                    3 => "bg-warning text-dark",
                                                    2 => "bg-danger text-white",
                                                    _ => "bg-secondary text-white"
                                                };

                                                <span class="badge @badgeClass m-1">@grade.GradeValue (@grade.Type)</span>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        <span>No grades available</span>
                                    }
                                }
                            </div>
                        </td>
                        <td>

                        </td>
                        <td>
                            <div class="d-flex flex-wrap">
                                @{
                                    if (finalGrade != 0)
                                    {
                                        <span class="badge bg-warning text-dark m-1">@finalGrade</span>
                                    }
                                    else
                                    {
                                        <span>Not graded yet</span>
                                    }
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

